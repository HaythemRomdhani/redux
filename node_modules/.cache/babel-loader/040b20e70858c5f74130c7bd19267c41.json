{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAYTHEM\\\\Desktop\\\\redux\\\\my-todo\\\\src\\\\components\\\\ListTack.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteToDO, doneTodo } from \"../actions/TodoActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleFilter = (filter, todo) => {\n  switch (filter) {\n    case \"done\":\n      return todo.filter(el => el.isDone === true);\n\n    case \"not_done\":\n      return todo.filter(el => el.isDone === false);\n\n    case \"no_filter\":\n    default:\n      return todo;\n  }\n};\n\nconst ListTack = () => {\n  _s();\n\n  const todo = useSelector(state => state.TodoReducer.todos);\n  const filter = useSelector(state => state.TodoReducer.filterValue);\n  const dispatch = useDispatch();\n  const result = handleFilter(filter, todo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: result.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: el.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(deleteToDO(el.id)),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(doneTodo(el.id)),\n        children: el.isDone ? \"undone\" : \"done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, el.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTack, \"IDFW18cAqBEz1OOwiQp/yH7CKJI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ListTack;\nexport default ListTack;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTack\");","map":{"version":3,"sources":["C:/Users/HAYTHEM/Desktop/redux/my-todo/src/components/ListTack.js"],"names":["React","useSelector","useDispatch","deleteToDO","doneTodo","handleFilter","filter","todo","el","isDone","ListTack","state","TodoReducer","todos","filterValue","dispatch","result","map","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,wBAArC;;;AAEA,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACrC,UAAQD,MAAR;AACE,SAAK,MAAL;AACE,aAAOC,IAAI,CAACD,MAAL,CAAaE,EAAD,IAAQA,EAAE,CAACC,MAAH,KAAc,IAAlC,CAAP;;AACF,SAAK,UAAL;AACE,aAAOF,IAAI,CAACD,MAAL,CAAaE,EAAD,IAAQA,EAAE,CAACC,MAAH,KAAc,KAAlC,CAAP;;AACF,SAAK,WAAL;AACA;AACE,aAAOF,IAAP;AAPJ;AASD,CAVD;;AAWA,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMH,IAAI,GAAGN,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,KAA9B,CAAxB;AACA,QAAMP,MAAM,GAAGL,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBE,WAA9B,CAA1B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,MAAM,GAAGX,YAAY,CAACC,MAAD,EAASC,IAAT,CAA3B;AACA,sBACE;AAAA,cACGS,MAAM,CAACC,GAAP,CAAYT,EAAD,iBACV;AAAA,8BACE;AAAA,kBAAKA,EAAE,CAACU;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAACZ,UAAU,CAACK,EAAE,CAACW,EAAJ,CAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACX,QAAQ,CAACI,EAAE,CAACW,EAAJ,CAAT,CAA/B;AAAA,kBACGX,EAAE,CAACC,MAAH,GAAY,QAAZ,GAAuB;AAD1B;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAAUD,EAAE,CAACW,EAAb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnBD;;GAAMT,Q;UACST,W,EACEA,W,EACEC,W;;;KAHbQ,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteToDO, doneTodo } from \"../actions/TodoActions\";\n\nconst handleFilter = (filter, todo) => {\n  switch (filter) {\n    case \"done\":\n      return todo.filter((el) => el.isDone === true);\n    case \"not_done\":\n      return todo.filter((el) => el.isDone === false);\n    case \"no_filter\":\n    default:\n      return todo;\n  }\n};\nconst ListTack = () => {\n  const todo = useSelector((state) => state.TodoReducer.todos);\n  const filter = useSelector((state) => state.TodoReducer.filterValue);\n  const dispatch = useDispatch();\n  const result = handleFilter(filter, todo);\n  return (\n    <div>\n      {result.map((el) => (\n        <div key={el.id}>\n          <h3>{el.title}</h3>\n          <button onClick={() => dispatch(deleteToDO(el.id))}>delete</button>\n          <button onClick={() => dispatch(doneTodo(el.id))}>\n            {el.isDone ? \"undone\" : \"done\"}\n          </button>\n          <button>edit</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ListTack;\n"]},"metadata":{},"sourceType":"module"}